<template>
  <a-modal
    v-model:open="visible"
    :title="title"
    :width="width"
    :centered="centered"
    :closable="closable"
    :mask-closable="maskClosable"
    :destroy-on-close="destroyOnClose"
    @cancel="handleCancel"
  >
    <!-- 弹窗内容 -->
    <div class="confirm-content">
      <p class="confirm-message">{{ message }}</p>
    </div>

    <!-- 自定义底部按钮 -->
    <template #footer>
      <div class="modal-footer">
        <a-button 
          key="confirm" 
          type="primary"
          @click="handleConfirm"
        >
          {{ confirmText }}
        </a-button>
        <a-button 
          key="cancel"
          @click="handleCancel"
        >
          {{ cancelText }}
        </a-button>
      </div>
    </template>
  </a-modal>
</template>

<script setup>
import { ref, watch } from 'vue'

// 定义组件的 props
const props = defineProps({
  // 控制弹窗显示/隐藏
  modelValue: {
    type: Boolean,
    default: false
  },
  // 弹窗标题
  title: {
    type: String,
    default: '操作确认'
  },
  // 提示信息
  message: {
    type: String,
    default: '是否同步应用信息？'
  },
  // 确认按钮文字
  confirmText: {
    type: String,
    default: '确定'
  },
  // 取消按钮文字
  cancelText: {
    type: String,
    default: '取消'
  },
  // 弹窗宽度
  width: {
    type: [String, Number],
    default: 420
  },
  // 是否垂直居中
  centered: {
    type: Boolean,
    default: true
  },
  // 是否显示右上角关闭按钮
  closable: {
    type: Boolean,
    default: true
  },
  // 点击蒙层是否允许关闭
  maskClosable: {
    type: Boolean,
    default: false
  },
  // 关闭时销毁 Modal 里的子元素
  destroyOnClose: {
    type: Boolean,
    default: false
  }
})

// 定义组件的 emits
const emit = defineEmits(['update:modelValue', 'confirm', 'cancel'])

// 内部控制弹窗显示状态
const visible = ref(props.modelValue)

// 监听外部 props 变化
watch(() => props.modelValue, (newVal) => {
  visible.value = newVal
})

// 监听内部状态变化，同步到外部
watch(visible, (newVal) => {
  emit('update:modelValue', newVal)
})

// 确认操作
const handleConfirm = () => {
  emit('confirm')
  visible.value = false
}

// 取消操作
const handleCancel = () => {
  emit('cancel')
  visible.value = false
}
</script>

<style scoped>
.confirm-content {
  padding: 16px 0;
}

.confirm-message {
  font-size: 14px;
  color: rgba(0, 0, 0, 0.85);
  margin: 0;
  text-align: center;
}

.modal-footer {
  display: flex;
  justify-content: center;
  gap: 8px;
}

.modal-footer .ant-btn-primary {
  min-width: 80px;
}

.modal-footer .ant-btn {
  min-width: 80px;
}
</style>

<template>
  <div>
    <!-- 触发按钮 -->
    <a-button @click="showDialog = true">打开确认弹窗</a-button>
    
    <!-- 确认弹窗组件 -->
    <ConfirmDialog
      v-model="showDialog"
      title="操作确认"
      message="是否同步应用信息？"
      @confirm="handleConfirm"
      @cancel="handleCancel"
    />
  </div>
</template>

<script setup>
import { ref } from 'vue'
import ConfirmDialog from './ConfirmDialog.vue'

const showDialog = ref(false)

const handleConfirm = () => {
  console.log('用户点击了确认')
  // 执行同步操作
}

const handleCancel = () => {
  console.log('用户点击了取消')
}
</script>
