<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>填写漏洞排查信息单</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/ant-design-vue/4.0.7/reset.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/ant-design-vue/4.0.7/antd.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/3.3.4/vue.global.prod.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ant-design-vue/4.0.7/antd.min.js"></script>
    <style>
        body {
            background-color: #f0f2f5;
            padding: 0;
            margin: 0;
        }
        
        .container {
            background: white;
            min-height: 100vh;
        }
        
        .header {
            padding: 16px 24px;
            background: white;
            border-bottom: 1px solid #f0f0f0;
            font-size: 16px;
            font-weight: 500;
            color: rgba(0, 0, 0, 0.85);
        }
        
        .form-wrapper {
            padding: 24px;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .form-item-label {
            position: relative;
        }
        
        .required-mark {
            color: #ff4d4f;
            margin-right: 4px;
        }
        
        .asset-checkbox-group {
            display: flex;
            flex-wrap: wrap;
            gap: 24px;
        }
        
        .asset-checkbox-item {
            min-width: 180px;
        }
        
        .footer-buttons {
            margin-top: 32px;
            text-align: right;
            padding-top: 24px;
            border-top: 1px solid #f0f0f0;
        }
        
        .ant-form-item {
            margin-bottom: 24px;
        }
        
        .search-input-wrapper {
            position: relative;
        }
        
        .loading-spinner {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
        }
        
        .form-section {
            background: #fafafa;
            padding: 16px;
            border-radius: 4px;
            margin-bottom: 24px;
        }
    </style>
</head>
<body>
    <div id="app">
        <div class="container">
            <div class="header">
                填写漏洞排查信息单
            </div>
            
            <div class="form-wrapper">
                <a-form
                    :model="formState"
                    :label-col="{ span: 6 }"
                    :wrapper-col="{ span: 18 }"
                    :rules="rules"
                    ref="formRef"
                >
                    <!-- 漏洞类型 -->
                    <a-row :gutter="24">
                        <a-col :span="12">
                            <a-form-item label="漏洞类型" name="vulnerabilityType">
                                <template #label>
                                    <span class="form-item-label">
                                        <span class="required-mark">*</span>漏洞类型
                                    </span>
                                </template>
                                <a-select 
                                    v-model:value="formState.vulnerabilityType"
                                    placeholder="请选择漏洞类型"
                                    @change="handleVulnerabilityTypeChange"
                                >
                                    <a-select-option value="network">网络设备漏洞</a-select-option>
                                    <a-select-option value="system">系统漏洞</a-select-option>
                                    <a-select-option value="application">应用漏洞</a-select-option>
                                    <a-select-option value="database">数据库漏洞</a-select-option>
                                </a-select>
                            </a-form-item>
                        </a-col>
                        
                        <a-col :span="12">
                            <a-form-item label="网络设备漏洞模糊搜索" name="deviceSearch">
                                <template #label>
                                    <span class="form-item-label">
                                        <span class="required-mark">*</span>网络设备漏洞模糊搜索
                                    </span>
                                </template>
                                <div class="search-input-wrapper">
                                    <a-input 
                                        v-model:value="searchKeyword"
                                        placeholder="请输入搜索关键词"
                                        @input="handleSearch"
                                        :disabled="formState.vulnerabilityType !== 'network'"
                                    />
                                    <a-spin v-if="searching" size="small" class="loading-spinner" />
                                </div>
                            </a-form-item>
                        </a-col>
                    </a-row>
                    
                    <!-- 网络设备资产名称 -->
                    <a-form-item label="网络设备资产名称" name="assetNames">
                        <template #label>
                            <span class="form-item-label">
                                <span class="required-mark">*</span>网络设备资产名称
                            </span>
                        </template>
                        <div class="form-section">
                            <a-checkbox-group v-model:value="formState.assetNames" class="asset-checkbox-group">
                                <div v-for="asset in filteredAssets" :key="asset.value" class="asset-checkbox-item">
                                    <a-checkbox :value="asset.value">
                                        {{ asset.label }}
                                    </a-checkbox>
                                </div>
                            </a-checkbox-group>
                            <a-empty v-if="filteredAssets.length === 0" description="暂无匹配的设备资产" />
                        </div>
                    </a-form-item>
                    
                    <!-- 人员选择和漏洞级别 -->
                    <a-row :gutter="24">
                        <a-col :span="12">
                            <a-form-item label="人员选择" name="personnel">
                                <template #label>
                                    <span class="form-item-label">
                                        <span class="required-mark">*</span>人员选择
                                    </span>
                                </template>
                                <a-select 
                                    v-model:value="formState.personnel"
                                    placeholder="请选择人员"
                                >
                                    <a-select-option value="operation">运维</a-select-option>
                                    <a-select-option value="development">开发</a-select-option>
                                    <a-select-option value="testing">测试</a-select-option>
                                    <a-select-option value="security">安全</a-select-option>
                                </a-select>
                            </a-form-item>
                        </a-col>
                        
                        <a-col :span="12">
                            <a-form-item label="漏洞级别" name="level">
                                <template #label>
                                    <span class="form-item-label">
                                        <span class="required-mark">*</span>漏洞级别
                                    </span>
                                </template>
                                <a-select 
                                    v-model:value="formState.level"
                                    placeholder="--请选择--"
                                >
                                    <a-select-option value="critical">严重</a-select-option>
                                    <a-select-option value="high">高危</a-select-option>
                                    <a-select-option value="medium">中危</a-select-option>
                                    <a-select-option value="low">低危</a-select-option>
                                </a-select>
                            </a-form-item>
                        </a-col>
                    </a-row>
                    
                    <!-- 审核人员 -->
                    <a-form-item label="审核人员" name="reviewer">
                        <template #label>
                            <span class="form-item-label">
                                <span class="required-mark">*</span>审核人员
                            </span>
                        </template>
                        <a-select 
                            v-model:value="formState.reviewer"
                            placeholder="请选择处理人"
                            show-search
                            :filter-option="filterOption"
                        >
                            <a-select-option value="zhangsan">张三</a-select-option>
                            <a-select-option value="lisi">李四</a-select-option>
                            <a-select-option value="wangwu">王五</a-select-option>
                            <a-select-option value="zhaoliu">赵六</a-select-option>
                        </a-select>
                    </a-form-item>
                    
                    <!-- 漏洞描述 -->
                    <a-form-item label="漏洞描述" name="description">
                        <a-textarea 
                            v-model:value="formState.description"
                            placeholder="请输入漏洞描述信息"
                            :rows="6"
                            :maxlength="500"
                            show-count
                        />
                    </a-form-item>
                    
                    <!-- 底部按钮 -->
                    <div class="footer-buttons">
                        <a-space>
                            <a-button @click="handleCancel">
                                返回
                            </a-button>
                            <a-button type="primary" @click="handleSubmit">
                                提交
                            </a-button>
                        </a-space>
                    </div>
                </a-form>
            </div>
        </div>
    </div>

    <script>
        const { createApp, ref, reactive, computed, watch } = Vue;
        const { message } = antd;
        
        createApp({
            setup() {
                const formRef = ref(null);
                const searchKeyword = ref('PS');
                const searching = ref(false);
                
                // 所有可用的网络设备资产
                const allAssets = ref([
                    { value: 'PSZ18441BAR', label: 'PSZ18441BAR' },
                    { value: 'PSZ18431F3U', label: 'PSZ18431F3U' },
                    { value: 'PSZ18421ABC', label: 'PSZ18421ABC' },
                    { value: 'PSZ18411DEF', label: 'PSZ18411DEF' },
                    { value: 'PSW20231GHI', label: 'PSW20231GHI' },
                    { value: 'PSW20241JKL', label: 'PSW20241JKL' },
                    { value: 'PSR10001MNO', label: 'PSR10001MNO' },
                    { value: 'PSR10002PQR', label: 'PSR10002PQR' },
                    { value: 'PST30001STU', label: 'PST30001STU' },
                    { value: 'PST30002VWX', label: 'PST30002VWX' }
                ]);
                
                // 过滤后的资产列表
                const filteredAssets = ref([
                    { value: 'PSZ18441BAR', label: 'PSZ18441BAR' },
                    { value: 'PSZ18431F3U', label: 'PSZ18431F3U' }
                ]);
                
                const formState = reactive({
                    vulnerabilityType: 'network',
                    assetNames: [],
                    personnel: 'operation',
                    level: null,
                    reviewer: null,
                    description: ''
                });
                
                const rules = {
                    vulnerabilityType: [
                        { required: true, message: '请选择漏洞类型', trigger: 'change' }
                    ],
                    assetNames: [
                        { required: true, message: '请选择网络设备资产', type: 'array', min: 1, trigger: 'change' }
                    ],
                    personnel: [
                        { required: true, message: '请选择人员', trigger: 'change' }
                    ],
                    level: [
                        { required: true, message: '请选择漏洞级别', trigger: 'change' }
                    ],
                    reviewer: [
                        { required: true, message: '请选择审核人员', trigger: 'change' }
                    ]
                };
                
                // 模拟搜索API
                const mockSearchAPI = (keyword) => {
                    return new Promise((resolve) => {
                        setTimeout(() => {
                            if (!keyword) {
                                resolve(allAssets.value);
                            } else {
                                const filtered = allAssets.value.filter(asset => 
                                    asset.label.toLowerCase().includes(keyword.toLowerCase())
                                );
                                resolve(filtered);
                            }
                        }, 500);
                    });
                };
                
                // 处理搜索
                const handleSearch = async () => {
                    if (formState.vulnerabilityType !== 'network') return;
                    
                    searching.value = true;
                    try {
                        const results = await mockSearchAPI(searchKeyword.value);
                        filteredAssets.value = results;
                        
                        // 清理已选中但不在搜索结果中的选项
                        const validValues = results.map(r => r.value);
                        formState.assetNames = formState.assetNames.filter(v => validValues.includes(v));
                    } catch (error) {
                        message.error('搜索失败，请重试');
                    } finally {
                        searching.value = false;
                    }
                };
                
                // 漏洞类型改变时的处理
                const handleVulnerabilityTypeChange = (value) => {
                    if (value !== 'network') {
                        searchKeyword.value = '';
                        filteredAssets.value = [];
                        formState.assetNames = [];
                    } else {
                        handleSearch();
                    }
                };
                
                // 人员选择过滤
                const filterOption = (input, option) => {
                    return option.children[0].children.toLowerCase().indexOf(input.toLowerCase()) >= 0;
                };
                
                // 提交表单
                const handleSubmit = async () => {
                    try {
                        await formRef.value.validateFields();
                        message.loading('正在提交...', 1);
                        
                        // 模拟提交延迟
                        setTimeout(() => {
                            console.log('提交的表单数据:', formState);
                            message.success('提交成功！');
                        }, 1000);
                    } catch (error) {
                        message.error('请完善表单信息');
                    }
                };
                
                // 返回
                const handleCancel = () => {
                    message.info('返回上一页');
                };
                
                // 初始化搜索
                handleSearch();
                
                return {
                    formRef,
                    formState,
                    rules,
                    searchKeyword,
                    searching,
                    filteredAssets,
                    handleSearch,
                    handleVulnerabilityTypeChange,
                    filterOption,
                    handleSubmit,
                    handleCancel
                };
            }
        }).use(antd).mount('#app');
    </script>
</body>
</html>